# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Please write our copyright if you use this file.
# ¬© 2023 Floorp Projects & Contributors

#! SELF HOST DOES NOT SUPPORTED
#TODO! buildjet config not implemented
#TODO: separate Publish to other workflow

#! aarch64 PGO can maybe not comportable with pgo
# name: Windows Build
# description: Action of Floorp Windows build (x64)

on:
  workflow_call:
    inputs:
      pgo:
        description: this enables Profile Guided Optimization.
        type: boolean
        default: false
      aarch64:
        description: enable aarch64 build
        type: boolean
        default: false

jobs:
  windows-build:
    runs-on: ubuntu-latest
    steps:
    - name: Init
      run: |
        export RUNNER_USERDIR=`echo ~`
        echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV

    - name: Change PPA mirror servers
      run: |
        sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
        sudo apt update

    #! ON UBUNTU RUNNER
    - name: Setup Disk & Swap Space üíø
      run: |
        echo Before:
        free -h
        df -h
        echo
        echo
        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile

        sudo apt clean
        # dpkg --list |grep "^rc" | cut -d " " -f 3 | xargs sudo dpkg --purge
        sudo apt remove temurin* openjdk*
        sudo apt remove microsoft-edge* firefox* google-chrome*
        sudo apt remove mono* libmono* msbuild* dotnet*
        sudo apt remove llvm-15* llvm-14* llvm-13* llvm-12* libllvm15* libllvm14* libllvm13* libllvm12*
        sudo apt remove gfortran* php* julia* r-*
        sudo apt remove mysql* postgresql*
        sudo apt remove google-cloud-sdk azure-cli powershell snapd

        sudo rm -rf /usr/share/swift &
        sudo rm -rf /usr/local/aws-cli &
        sudo rm -rf /usr/local/aws-sam-cli &
        sudo rm -rf /usr/local/julia* &
        sudo rm -rf /usr/local/lib/android &
        sudo rm -rf /usr/local/lib/node_modules &
        sudo rm -rf /opt/hostedtoolcache &
        sudo rm -rf /opt/pipx &
        sudo rm -rf /snap &
        wait

        sudo fallocate -l 20G /home/runner/swapfile
        sudo chmod 600 /home/runner/swapfile
        sudo mkswap /home/runner/swapfile
        sudo swapon /home/runner/swapfile
        # sudo fallocate -l 10G /home/runner/swapfile2
        # sudo chmod 600 /home/runner/swapfile2
        # sudo mkswap /home/runner/swapfile2
        # sudo swapon /home/runner/swapfile2

        sudo sysctl vm.swappiness=10


        echo
        echo
        echo After:
        free -h
        df -h

    - uses: actions/checkout@v3
      name: Clone üß¨

    - name: Clone l10n-central üß¨
      uses: actions/checkout@v3
      with:
        repository: Floorp-Projects/l10n-central
        path: l10n-central

    - name: Configure sccache
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Setup ü™õ
      run: |
        mkdir -p $RUNNER_USERDIR/win-cross

        if [[ $GHA_aarch64 != 'true' ]];then
          cp ./.github/mozconfig_win_x86_64_pgo_base mozconfig
        else
          cp ./.github/mozconfig_win_aarch64_pgo_base mozconfig
        fi

        echo 'ac_add_options --with-branding=browser/branding/official' >> mozconfig

        if [[ $GHA_pgo == 'true' ]]; then
          echo 'ac_add_options --enable-profile-generate=cross' >> mozconfig
        fi

        echo 'ac_add_options --with-l10n-base=$PWD/l10n-central/l10n-central' >> mozconfig

        # SCCACHE START
        echo "mk_add_options 'export RUSTC_WRAPPER=/home/runner/.mozbuild/sccache/sccache'" >> mozconfig
        echo "mk_add_options 'export CCACHE_CPP2=yes'" >> mozconfig
        echo "ac_add_options --with-ccache=/home/runner/.mozbuild/sccache/sccache" >> mozconfig
        echo "mk_add_options 'export SCCACHE_GHA_ENABLED=on'" >> mozconfig
        # SCCACHE END

        sudo apt update
        sudo apt install zstd p7zip-full

        echo Setup wine
        aria2c "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-1.toolchains.v3.linux64-wine.latest/artifacts/public%2Fbuild%2Fwine.tar.zst" -o wine.tar.zst
        tar --zstd -xvf wine.tar.zst -C $RUNNER_USERDIR/win-cross
        rm wine.tar.zst

        # echo Replace rustc
        # aria2c "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-3.toolchains.v3.linux64-rust-windows-1.68.latest/artifacts/public%2Fbuild%2Frustc.tar.zst" -o rustc.tar.zst
        # tar --zstd -xvf rustc.tar.zst -C $RUNNER_USERDIR/win-cross
        # echo 'export RUSTC="$RUNNER_USERDIR/win-cross/rustc/bin/rustc"' >> mozconfig

        echo Setup Visual Studio
        sudo apt install -y msitools python3-pip
        ./mach python --virtualenv build taskcluster/scripts/misc/get_vs.py build/vs/vs2019.yaml $RUNNER_USERDIR/win-cross/vs2019
        chmod -R +x "$RUNNER_USERDIR/win-cross/vs2019"

        ./mach --no-interactive bootstrap --application-choice browser
        echo "export LIB=\"$(cd $RUNNER_USERDIR/.mozbuild/clang/lib/clang/* && cd lib/windows && pwd)\"" >> mozconfig

        export DISPLAY_VERSION=`cat browser/config/version_display.txt`
        export UPDATE_CHANNEL="release"
        echo "DISPLAY_VERSION=$DISPLAY_VERSION" >> $GITHUB_ENV
        echo "UPDATE_CHANNEL=$UPDATE_CHANNEL" >> $GITHUB_ENV
      env:
        GHA_pgo: ${{inputs.pgo}}
        GHA_aarch64: ${{inputs.aarch64}}

    - name: setup Rust ü¶Ä
      run: |
        if [[ $GHA_aarch64 != 'true' ]];then
          rustup target add x86_64-pc-windows-msvc
        else
          rustup target add aarch64-pc-windows-msvc
        fi

        #? https://github.com/mozilla/sccache#known-caveats
        export CARGO_INCREMENTAL=0
      env:
        GHA_aarch64: ${{inputs.aarch64}}

    - name: Build üî®

      run: |
        ./mach build

    - name: Package üì¶

      run: |
        ./mach package

        ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

    - name: Copy üìÇ

      run: |
        mkdir $RUNNER_USERDIR/output
        if [[ $GHA_aarch64 == 'true' ]];then
          arch="aarch64"
          arch_inst="win64-aarch64"
        else
          arch="x86_64"
          arch_inst="win64"
        fi

        cp obj-${arch}-pc-windows-msvc/dist/install/sea/floorp-*.en-US.${arch_inst}.installer-stub.exe $RUNNER_USERDIR/output/
        cp obj-${arch}-pc-windows-msvc/dist/install/sea/floorp-*.en-US.${arch_inst}.installer.exe $RUNNER_USERDIR/output/
        cp obj-${arch}-pc-windows-msvc/dist/floorp-*.en-US.${arch_inst}.zip $RUNNER_USERDIR/output/
      env:
        GHA_aarch64: ${{inputs.aarch64}}

    # Publish START
    - name: Publish ${{fromJson('["no-pgo","pgo"]')[inputs.pgo]}}üéÅ
      uses: actions/upload-artifact@master
      with:
        name: floorp-windows-${{fromJson('["x86_64","aarch64"]')[inputs.aarch64]}}-${{fromJson('["package","build-with-enable-profile-generate"]')[inputs.pgo]}}
        path: ${{ env.RUNNER_USERDIR }}/output
    # Publish END
